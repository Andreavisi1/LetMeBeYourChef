// Generated by view binder compiler. Do not edit!
package com.example.letmebeyourchef.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.letmebeyourchef.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListStepIstruzioniBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final RecyclerView recyclerIstruzioniIngredienti;

  @NonNull
  public final RecyclerView recyclerIstruzioniStrumenti;

  @NonNull
  public final TextView textViewNumeroStepIstruzioni;

  @NonNull
  public final TextView textViewTitoloStepIstruzioni;

  private ListStepIstruzioniBinding(@NonNull CardView rootView,
      @NonNull RecyclerView recyclerIstruzioniIngredienti,
      @NonNull RecyclerView recyclerIstruzioniStrumenti,
      @NonNull TextView textViewNumeroStepIstruzioni,
      @NonNull TextView textViewTitoloStepIstruzioni) {
    this.rootView = rootView;
    this.recyclerIstruzioniIngredienti = recyclerIstruzioniIngredienti;
    this.recyclerIstruzioniStrumenti = recyclerIstruzioniStrumenti;
    this.textViewNumeroStepIstruzioni = textViewNumeroStepIstruzioni;
    this.textViewTitoloStepIstruzioni = textViewTitoloStepIstruzioni;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ListStepIstruzioniBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListStepIstruzioniBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_step_istruzioni, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListStepIstruzioniBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recycler_istruzioni_ingredienti;
      RecyclerView recyclerIstruzioniIngredienti = ViewBindings.findChildViewById(rootView, id);
      if (recyclerIstruzioniIngredienti == null) {
        break missingId;
      }

      id = R.id.recycler_istruzioni_strumenti;
      RecyclerView recyclerIstruzioniStrumenti = ViewBindings.findChildViewById(rootView, id);
      if (recyclerIstruzioniStrumenti == null) {
        break missingId;
      }

      id = R.id.textView_numero_step_istruzioni;
      TextView textViewNumeroStepIstruzioni = ViewBindings.findChildViewById(rootView, id);
      if (textViewNumeroStepIstruzioni == null) {
        break missingId;
      }

      id = R.id.textView_titolo_step_istruzioni;
      TextView textViewTitoloStepIstruzioni = ViewBindings.findChildViewById(rootView, id);
      if (textViewTitoloStepIstruzioni == null) {
        break missingId;
      }

      return new ListStepIstruzioniBinding((CardView) rootView, recyclerIstruzioniIngredienti,
          recyclerIstruzioniStrumenti, textViewNumeroStepIstruzioni, textViewTitoloStepIstruzioni);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
